================================================================================================= FAILURES =================================================================================================
____________________________________________________________________________________________ test_pdflatex[pdf] ____________________________________________________________________________________________

expected = '/Users/mwesslen/Repos/matplotlib/result_images/test_backend_pgf/pgf_pdflatex-expected.pdf'
actual = PosixPath('/Users/mwesslen/Repos/matplotlib/result_images/test_backend_pgf/pgf_pdflatex.pdf'), tol = 0

    def _raise_on_image_difference(expected, actual, tol):
        __tracebackhide__ = True

        err = compare_images(expected, actual, tol, in_decorator=True)
        if err:
            for key in ["actual", "expected", "diff"]:
                err[key] = os.path.relpath(err[key])
>           raise ImageComparisonFailure(
                ('images not close (RMS %(rms).3f):'
                    '\n\t%(actual)s\n\t%(expected)s\n\t%(diff)s') % err)
E           matplotlib.testing.exceptions.ImageComparisonFailure: images not close (RMS 11.669):
E               result_images/test_backend_pgf/pgf_pdflatex_pdf.png
E               result_images/test_backend_pgf/pgf_pdflatex-expected_pdf.png
E               result_images/test_backend_pgf/pgf_pdflatex_pdf-failed-diff.png

lib/matplotlib/testing/decorators.py:139: ImageComparisonFailure
______________________________________________________________________________________________ test_rcupdate _______________________________________________________________________________________________

    @needs_xelatex
    @needs_pdflatex
    @pytest.mark.style('default')
    @pytest.mark.backend('pgf')
    def test_rcupdate():
        rc_sets = [{'font.family': 'sans-serif',
                    'font.size': 30,
                    'figure.subplot.left': .2,
                    'lines.markersize': 10,
                    'pgf.rcfonts': False,
                    'pgf.texsystem': 'xelatex'},
                   {'font.family': 'monospace',
                    'font.size': 10,
                    'figure.subplot.left': .1,
                    'lines.markersize': 20,
                    'pgf.rcfonts': False,
                    'pgf.texsystem': 'pdflatex',
                    'pgf.preamble': ('\\usepackage[utf8x]{inputenc}'
                                     '\\usepackage[T1]{fontenc}'
                                     '\\usepackage{sfmath}')}]
        tol = [6, 0]
        for i, rc_set in enumerate(rc_sets):
            with mpl.rc_context(rc_set):
                for substring, pkg in [('sfmath', 'sfmath'), ('utf8x', 'ucs')]:
                    if (substring in mpl.rcParams['pgf.preamble']
                            and not _has_tex_package(pkg)):
                        pytest.skip(f'needs {pkg}.sty')
                create_figure()
>               compare_figure('pgf_rcupdate%d.pdf' % (i + 1), tol=tol[i])

lib/matplotlib/tests/test_backend_pgf.py:138:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

fname = 'pgf_rcupdate2.pdf', savefig_kwargs = {}, tol = 0

    def compare_figure(fname, savefig_kwargs={}, tol=0):
        actual = os.path.join(result_dir, fname)
        plt.savefig(actual, **savefig_kwargs)

        expected = os.path.join(result_dir, "expected_%s" % fname)
        shutil.copyfile(os.path.join(baseline_dir, fname), expected)
        err = compare_images(expected, actual, tol=tol)
        if err:
>           raise ImageComparisonFailure(err)
E           matplotlib.testing.exceptions.ImageComparisonFailure: Error: Image files did not match.
E             RMS Value: 13.166575390337284
E             Expected:
E               /Users/mwesslen/Repos/matplotlib/result_images/test_backend_pgf/expected_pgf_rcupdate2_pdf.png
E             Actual:
E               /Users/mwesslen/Repos/matplotlib/result_images/test_backend_pgf/pgf_rcupdate2_pdf.png
E             Difference:
E               /Users/mwesslen/Repos/matplotlib/result_images/test_backend_pgf/pgf_rcupdate2_pdf-failed-diff.png
E             Tolerance:
E               0

lib/matplotlib/tests/test_backend_pgf.py:39: ImageComparisonFailure
___________________________________________________________________________________________ test_mixedmode[pdf] ____________________________________________________________________________________________

expected = '/Users/mwesslen/Repos/matplotlib/result_images/test_backend_pgf/pgf_mixedmode-expected.pdf'
actual = PosixPath('/Users/mwesslen/Repos/matplotlib/result_images/test_backend_pgf/pgf_mixedmode.pdf'), tol = 0

    def _raise_on_image_difference(expected, actual, tol):
        __tracebackhide__ = True

        err = compare_images(expected, actual, tol, in_decorator=True)
        if err:
            for key in ["actual", "expected", "diff"]:
                err[key] = os.path.relpath(err[key])
>           raise ImageComparisonFailure(
                ('images not close (RMS %(rms).3f):'
                    '\n\t%(actual)s\n\t%(expected)s\n\t%(diff)s') % err)
E           matplotlib.testing.exceptions.ImageComparisonFailure: images not close (RMS 0.867):
E               result_images/test_backend_pgf/pgf_mixedmode_pdf.png
E               result_images/test_backend_pgf/pgf_mixedmode-expected_pdf.png
E               result_images/test_backend_pgf/pgf_mixedmode_pdf-failed-diff.png

lib/matplotlib/testing/decorators.py:139: ImageComparisonFailure
_________________________________________________________________________________ test_interactive_backend[toolbar2-tkagg] _________________________________________________________________________________

backend = 'tkagg', toolbar = 'toolbar2'

    @pytest.mark.parametrize("backend", _get_testable_interactive_backends())
    @pytest.mark.parametrize("toolbar", ["toolbar2", "toolmanager"])
    @pytest.mark.flaky(reruns=3)
    def test_interactive_backend(backend, toolbar):
        if backend == "macosx":
            if toolbar == "toolmanager":
                pytest.skip("toolmanager is not implemented for macosx.")

        proc = subprocess.run(
            [sys.executable, "-c",
             inspect.getsource(_test_interactive_impl)
             + "\n_test_interactive_impl()",
             json.dumps({"toolbar": toolbar})],
            env={**os.environ, "MPLBACKEND": backend, "SOURCE_DATE_EPOCH": "0"},
            timeout=_test_timeout,
            stdout=subprocess.PIPE, universal_newlines=True)
        if proc.returncode:
>           pytest.fail("The subprocess returned with non-zero exit status "
                        f"{proc.returncode}.")
E           Failed: The subprocess returned with non-zero exit status -11.

lib/matplotlib/tests/test_backends_interactive.py:174: Failed
_______________________________________________________________________________ test_interactive_backend[toolmanager-tkagg] ________________________________________________________________________________

backend = 'tkagg', toolbar = 'toolmanager'

    @pytest.mark.parametrize("backend", _get_testable_interactive_backends())
    @pytest.mark.parametrize("toolbar", ["toolbar2", "toolmanager"])
    @pytest.mark.flaky(reruns=3)
    def test_interactive_backend(backend, toolbar):
        if backend == "macosx":
            if toolbar == "toolmanager":
                pytest.skip("toolmanager is not implemented for macosx.")

        proc = subprocess.run(
            [sys.executable, "-c",
             inspect.getsource(_test_interactive_impl)
             + "\n_test_interactive_impl()",
             json.dumps({"toolbar": toolbar})],
            env={**os.environ, "MPLBACKEND": backend, "SOURCE_DATE_EPOCH": "0"},
            timeout=_test_timeout,
            stdout=subprocess.PIPE, universal_newlines=True)
        if proc.returncode:
>           pytest.fail("The subprocess returned with non-zero exit status "
                        f"{proc.returncode}.")
E           Failed: The subprocess returned with non-zero exit status -11.

lib/matplotlib/tests/test_backends_interactive.py:174: Failed
------------------------------------------------------------------------------------------- Captured stderr call -------------------------------------------------------------------------------------------
/usr/local/Cellar/python@3.9/3.9.1_8/Frameworks/Python.framework/Versions/3.9/lib/python3.9/_collections_abc.py:856: UserWarning: Treat the new Tool classes introduced in v1.5 as experimental for now; the API and rcParam may change in future versions.
  self[key] = other[key]
------------------------------------------------------------------------------------------- Captured stderr call -------------------------------------------------------------------------------------------
/usr/local/Cellar/python@3.9/3.9.1_8/Frameworks/Python.framework/Versions/3.9/lib/python3.9/_collections_abc.py:856: UserWarning: Treat the new Tool classes introduced in v1.5 as experimental for now; the API and rcParam may change in future versions.
  self[key] = other[key]
------------------------------------------------------------------------------------------- Captured stderr call -------------------------------------------------------------------------------------------
/usr/local/Cellar/python@3.9/3.9.1_8/Frameworks/Python.framework/Versions/3.9/lib/python3.9/_collections_abc.py:856: UserWarning: Treat the new Tool classes introduced in v1.5 as experimental for now; the API and rcParam may change in future versions.
  self[key] = other[key]
------------------------------------------------------------------------------------------- Captured stderr call -------------------------------------------------------------------------------------------
/usr/local/Cellar/python@3.9/3.9.1_8/Frameworks/Python.framework/Versions/3.9/lib/python3.9/_collections_abc.py:856: UserWarning: Treat the new Tool classes introduced in v1.5 as experimental for now; the API and rcParam may change in future versions.
  self[key] = other[key]
========================================================================================= short test summary info ==========================================================================================
FAILED lib/matplotlib/tests/test_backend_pgf.py::test_pdflatex[pdf] - matplotlib.testing.exceptions.ImageComparisonFailure: images not close (RMS 11.669):
FAILED lib/matplotlib/tests/test_backend_pgf.py::test_rcupdate - matplotlib.testing.exceptions.ImageComparisonFailure: Error: Image files did not match.
FAILED lib/matplotlib/tests/test_backend_pgf.py::test_mixedmode[pdf] - matplotlib.testing.exceptions.ImageComparisonFailure: images not close (RMS 0.867):
FAILED lib/matplotlib/tests/test_backends_interactive.py::test_interactive_backend[toolbar2-tkagg] - Failed: The subprocess returned with non-zero exit status -11.
FAILED lib/matplotlib/tests/test_backends_interactive.py::test_interactive_backend[toolmanager-tkagg] - Failed: The subprocess returned with non-zero exit status -11.
=============================================================== 5 failed, 7867 passed, 182 skipped, 13 xfailed, 7 rerun in 740.58s (0:12:20) ===============================================================